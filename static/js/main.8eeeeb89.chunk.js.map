{"version":3,"sources":["util/api.js","components/NavBar.js","components/SearchForm.js","components/Results.js","Pages/Favorite.js","app.js","index.js"],"names":["type","String","obj","axios","get","post","id","delete","NavBar","className","to","SearchForm","props","style","height","clear","paddingTop","textAlign","onSubmit","searchGBooksAPI","name","onChange","updateSelect","value","placeholder","updateSearch","Results","results","map","element","index","maxWidth","maxHeight","src","volumeInfo","imageLinks","smallThumbnail","alt","title","authors","join","description","href","canonicalVolumeLink","target","rel","onClick","bookSave","author","image","link","Favorite","favBook","bookDelete","_id","App","useState","search","params","setParams","setResults","setFavBook","useEffect","API","then","books","data","a","console","log","exact","path","e","preventDefault","response","items","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8eeeeb89.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n    search: (type, String, obj) => axios.get(`/api/gbooks/${type}/${String}`, obj),\r\n    // search: (type, string) => axios.get(\"/search/\", {params: {q: type + \":\" + string }}),\r\n\r\n    saveBook: (obj) => axios.post(\"/api/books\", obj),\r\n\r\n    getBooks: (obj) => axios.get(\"/api/books\"),\r\n\r\n    removeBook: (id) => axios.delete(\"/api/books/\"+id),\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n\r\n    return(\r\n        <nav className=\"navbar navbar-default\">\r\n        <div className=\"container-fluid\">\r\n  \r\n          <div className='navbar-header'>\r\n            <Link to=\"/\" className=\"navbar-brand\">\r\n              Google Books search\r\n        </Link>\r\n          </div>\r\n          <ul className=\"nav navbar-nav\">\r\n            <li>\r\n              <Link to=\"/Favorite\">Favorites\r\n           </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\n\r\nconst SearchForm = (props) => {\r\n    return (\r\n        <div className=\"container text-center\">\r\n            <div style={{ height: 300, clear: \"both\", paddingTop: 50, textAlign: \"center\" }} className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h2 className=\"display-4\">Seach GoogleBooks by Author or Title</h2>\r\n                    <form className=\"col-8 offset-2\" onSubmit={props.searchGBooksAPI}>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-3\">\r\n                                <select\r\n                                    name=\"type\"\r\n                                    className=\"form-control\"\r\n                                    onChange={props.updateSelect}\r\n                                >\r\n                                    <option value=\"select\">Select</option>\r\n                                    <option value=\"author\">Author</option>\r\n                                    <option value=\"title\">Title</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-7\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Search Text\"\r\n                                    name=\"search\"\r\n                                    onChange={props.updateSearch}\r\n                                ></input>\r\n                            </div>\r\n                            <div className=\"form-group col-md-2\">\r\n                                <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary\"\r\n                                id=\"submitBtn\"\r\n                            >\r\n                                Search\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchForm;","import React from \"react\";\r\n\r\n\r\nconst Results = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h3>Google book Results:</h3>\r\n            <div className=\"text-left mt-5\">\r\n                {props.results.map((element, index) => (\r\n                    <div key={index} className=\"my-4 row\">\r\n                        <img\r\n                        className=\"col-sm-2\"\r\n                        style={{ maxWidth: \"10rem\", maxHeight: \"13rem\" }}\r\n                        src={\r\n                            element.volumeInfo.imageLinks\r\n                            ? element.volumeInfo.imageLinks.smallThumbnail\r\n                            : \"https://cdn.onlinewebfonts.com/svg/img_148071.png\"\r\n                        }\r\n                        alt=\"Book Cover preview\"\r\n                        ></img>\r\n                        <div className=\"col-sm-10\">\r\n                            <h4 className=\"card-title\">{element.volumeInfo.title}</h4>\r\n                            <h5>\r\n                                <strong>\r\n                                    {element.volumeInfo.authors\r\n                                    ? element.volumeInfo.authors.join(\", \")\r\n                                : \"No author listed\"}\r\n                                </strong>\r\n                            </h5>\r\n                            <p className=\"card-text\">\r\n                                {element.volumeInfo.description\r\n                                ? element.volumeInfo.description\r\n                                : \"No title description available\"}\r\n                            </p>\r\n                            <a\r\n                                href={element.volumeInfo.canonicalVolumeLink}\r\n                                className=\"btn btn-primary\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                Link to More info\r\n                            </a>\r\n                            <br></br>\r\n                            <button\r\n                            className=\"btn btn-primary mx-3\"\r\n                            onClick={() => {\r\n                                props.bookSave({\r\n                                    title: element.volumeInfo.title,\r\n                                    author: element.volumeInfo.author\r\n                                    ? element.volumeInfo.author.join(\", \")\r\n                                    : \"No author listed\",\r\n                                    description: element.volumeInfo.description\r\n                                    ? element.volumeInfo.description\r\n                                    : \"No description available\",\r\n                                    image: element.volumeInfo.imageLinks\r\n                                    ? element.volumeInfo.imageLinks.smallThumbnail\r\n                                    : \"https://cdn.onlinewebfonts.com/svg/img_148071.pngg\",\r\n                                    link: element.volumeInfo.canonicalVolumeLink,\r\n                                });\r\n                            }}\r\n                            >\r\n                            Save to your favorites\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results","import React from \"react\";\r\n\r\n\r\nconst Favorite = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Saved Favorites</h1>\r\n            <div className=\"text-left mt-5\">\r\n                {props.favBook.map((element, index) => (\r\n                    <div key={index} className=\"my-4 row\">\r\n                        <img\r\n                            className=\"col-sm-2\"\r\n                            style={{ maxHeight: \"13rem\", maxWidth: \"10rem\" }}\r\n                            src={element.image}\r\n                            alt=\"Book cover preview\"\r\n                        ></img>\r\n                        <div className=\"col-sm-10\">\r\n                            <h5 className=\"card-title\">{element.title}</h5>\r\n                            <p>\r\n                                <strong>{element.author}</strong>\r\n                            </p>\r\n                            <p className=\"card-text\">{element.description}</p>\r\n                            <a\r\n                                href={element.link}\r\n                                className=\"btn btn-primary\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                More info\r\n                            </a>\r\n                            <button\r\n                                className=\"btn btn-danger mx-3\"\r\n                                onClick={() => {\r\n                                    props.bookDelete(element._id);\r\n                                }}\r\n                            >\r\n                                Delete from List\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favorite","import React, { useEffect, useState } from \"react\";\r\nimport API from \"./util/api\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport SearchForm from \"./components/SearchForm\";\r\nimport Results from \"./components/Results\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Favorite from \"./Pages/Favorite\";\r\n\r\nfunction App() {\r\n    const [params, setParams] = useState({ search: \"\", type: \"\" });\r\n    const [results, setResults] = useState([]);\r\n    const [favBook, setFavBook] = useState([]);\r\n\r\n    useEffect(() => {\r\n        API.getBooks().then((books) => setFavBook(books.data));\r\n    }, []);\r\n\r\n    const updateSearch = (e) => {\r\n        setParams({ ...params, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const updateSelect = (e) => {\r\n        setParams({ ...params, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const searchGBooksAPI = (e) => {\r\n        e.preventDefault();\r\n        console.log (params)\r\n        if (params.search !== \"\" && params.type !== \"\") {\r\n            API.search(params.type, params.search).then((response) => {\r\n                console.log(\"response\", response)\r\n                console.log(\"results \", response.data.items);\r\n                setResults(response.data.items);\r\n            });\r\n        }\r\n    };\r\n\r\n    const bookSave = async (obj) => {\r\n        await API.saveBook(obj);\r\n    \r\n        await API.getBooks().then((books) => setFavBook(books.data));\r\n    \r\n         console.log(favBook);\r\n      };\r\n\r\n    const bookDelete = async (id) => {\r\n      console.log(id)\r\n        await API.removeBook(id);\r\n    \r\n        await API.getBooks().then((books) => setFavBook(books.data));\r\n      };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n          <Router>\r\n            <NavBar />\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <SearchForm\r\n                updateSearch={updateSearch}\r\n                updateSelect={updateSelect}\r\n                searchGBooksAPI={searchGBooksAPI}\r\n                />\r\n                <Results results={results} bookSave={bookSave} />\r\n              </Route>\r\n              <Route exact path=\"/favorite\">\r\n                <Favorite favBook={favBook} bookDelete={bookDelete} />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n      );\r\n    }\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\n\r\nReactDOM.render(\r\n  \r\n    <App />,\r\n  \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}